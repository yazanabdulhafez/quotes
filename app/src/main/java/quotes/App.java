/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.common.reflect.TypeToken;
import com.google.gson.Gson;

import java.io.*;
import java.lang.reflect.Type;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;


public class App {


private static boolean serverError=false; //variable for the server errors.
private  static int jsonSize; //variable for the size of arraylist that contain quotes objects.


    //Getters and Setters

    public static boolean isServerError() {
        return serverError;
    }

    public static void setServerError(boolean serverError) {
        App.serverError = serverError;
    }

    public static int getJsonSize() {
        return jsonSize;
    }

    public static void setJsonSize(int jsonSize) {
        App.jsonSize = jsonSize;
    }

    //The main method in the app

    public static void main(String[] args) {
        String quotesFilePath="app/src/main/resources/recentquotes.json";
        String url = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
       sendGetRequest(url);
        System.out.println("out"+sendGetRequest(url));
        if (serverError){
           Object output= getQuotesFromFile(quotesFilePath).get(randomIndexGenerator(getJsonSize()));
            System.out.println("quote from file: "+output); //-------print the random quote from the json file.
        }

    }

    //The other methods in this app

    //get the quotes from API

    static String sendGetRequest(String urlString){
        String printedQuote="";
        try {

            URL url = new URL(urlString);
            HttpURLConnection connection = setUpConnectionObject(url);
            if(connection.getResponseCode() == 200){
                BufferedReader in = getBufferedReaderFromConnection(connection);
                printedQuote=printBufferedReaderContect(in);

                in.close();
            }
        } catch (MalformedURLException e) {
            printedQuote=null;
            setServerError(true);
            System.out.println("Sorry, there was a problem creating the URL object,the error was:");
            System.out.println(e.getMessage());
            e.printStackTrace();

        } catch (IOException e) {
            setServerError(true);
            System.out.println("Sorry, there was a problem opening the connection from the URL object, the error was:");
            System.out.println(e.getMessage());
            e.printStackTrace();

        }
        return printedQuote;
    }

    static HttpURLConnection setUpConnectionObject(URL url) throws IOException {
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11");
        return connection;
    }

    static BufferedReader getBufferedReaderFromConnection(HttpURLConnection connection) throws IOException {
        InputStream inputStream = connection.getInputStream();
        InputStreamReader inputStreamReader = new InputStreamReader(inputStream);   // needs an input stream
        BufferedReader in = new BufferedReader(inputStreamReader);    // I need to provide the reader with a stream reader
        //  BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
        return in;
    }

    static String printBufferedReaderContect(BufferedReader in) throws IOException {

        StringBuilder createdLine;
        String line = in.readLine();
        createdLine = new StringBuilder(line);
        while(line != null){
           System.out.println("quote from API: "+line);
            line = in.readLine();
            createdLine.append(line);
        }
        //write the random quote from the api on a json file.
        FileWriter fileToWrite = new FileWriter("app/src/main/resources/cashedApiQuoets.json");
        fileToWrite.write(createdLine.toString());
        fileToWrite.close();
return createdLine.toString();
    }

    //get the quotes from the json file

    public static ArrayList<Quotes> getQuotesFromFile(String path){
        Gson gson = new Gson();
        ArrayList<Quotes> json=new ArrayList<>();
        FileReader fr= null;

        try {
//            fr = new FileReader(path);
//            BufferedReader br=new BufferedReader(fr);
            BufferedReader br = Files.newBufferedReader(Paths.get(path));
//            BufferedReader br = new BufferedReader(new InputStreamReader(fr, "UTF-8"));
            Type quoteType = new TypeToken<List<Quotes>>(){}.getType();
            json = gson.fromJson(br,quoteType);
            System.out.println("json: "+json);
            br.close();
//            fr.close();
            setJsonSize(json.size());//set the array list size to use it in random function.

        } catch (IOException e) {
            e.printStackTrace();
        }
        return json; //return all quotes in the file as array list of objects.

    }

    //generate random index between the 0 and the size of the array list that contain quotes.
    public static int randomIndexGenerator(int jsonSize){
         int randomIndex=(int)(Math.random()*jsonSize);
        System.out.println("random index: "+randomIndex); //--------print the index.
        return randomIndex;
    }

}

